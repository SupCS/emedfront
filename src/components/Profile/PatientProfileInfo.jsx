// üìÑ PatientProfileInfo.jsx
import styles from "./ProfileInfo.module.css";
import pencilIcon from "../../assets/pencil.svg";
import calendarBirthdayIcon from "../../assets/calendarBirthday.svg";
import rulerIcon from "../../assets/ruler.svg";
import scaleIcon from "../../assets/scale.svg";
import bloodtypeIcon from "../../assets/bloodtype.svg";
import genderIcon from "../../assets/gender.svg";
import OutlineButton from "../Buttons/OutlineButton";
import RightBlock from "./RightBlock";

export default function PatientProfileInfo({ profile, isOwner, onEdit }) {
  const formatDate = (isoDate) => {
    if (!isoDate) return "";
    const date = new Date(isoDate);
    return date.toLocaleDateString("uk-UA");
  };

  const calculateAge = (isoDate) => {
    if (!isoDate) return null;
    const today = new Date();
    const birthDate = new Date(isoDate);
    let age = today.getFullYear() - birthDate.getFullYear();
    const m = today.getMonth() - birthDate.getMonth();
    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
      age--;
    }
    return age;
  };

  const getGenderLabel = (value) => {
    const map = {
      male: "–ß–æ–ª–æ–≤—ñ—á–∞",
      female: "–ñ—ñ–Ω–æ—á–∞",
      other: "–Ü–Ω—à–∞",
    };
    return map[value] || value;
  };

  return (
    <div className={styles.profileContent}>
      <div className={styles.leftColumn}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className={styles.leftBlock}>
          <div className={styles.profileHeader}>
            <img
              src={profile.avatar}
              alt="–ê–≤–∞—Ç–∞—Ä"
              className={styles.avatarSquare}
            />
            <div className={styles.profileTextBlock}>
              <div className={styles.profileName}>{profile.name}</div>
              <div className={styles.profileEmail}>{profile.email}</div>
              <div className={styles.profilePhone}>{profile.phone}</div>
            </div>
          </div>

          {isOwner && (
            <button
              className={styles.editButton}
              onClick={() => onEdit(["avatar", "name", "phone"])}
            >
              <img
                src={pencilIcon}
                className={styles.blockEditIcon}
                alt="edit"
              />
            </button>
          )}
        </div>

        {/* –ú–µ–¥–∏—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
        <div className={styles.leftBlock}>
          <div className={styles.fieldLine}>
            <strong>–ê–ª–µ—Ä–≥—ñ—ó:</strong>{" "}
            {(profile.allergies || []).join(", ") || "-"}
          </div>
          <div className={styles.fieldLine}>
            <strong>–•—Ä–æ–Ω—ñ—á–Ω—ñ –¥—ñ–∞–≥–Ω–æ–∑–∏:</strong>{" "}
            {(profile.chronicDiseases || []).join(", ") || "-"}
          </div>
          {isOwner && (
            <button
              className={styles.editButton}
              onClick={() => onEdit(["allergies", "chronicDiseases"])}
            >
              <img
                src={pencilIcon}
                className={styles.blockEditIcon}
                alt="edit"
              />
            </button>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥—ñ–π */}
        {isOwner && (
          <div className={styles.leftBlock}>
            <div className={styles.inlineButtonGroup}>
              <OutlineButton
                to={`/profile/patient/${profile.id}/prescriptions`}
              >
                –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è
              </OutlineButton>
              <OutlineButton to="/appointments">
                –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞–ø–∏—Å–∏
              </OutlineButton>
            </div>
          </div>
        )}
      </div>

      {/* –ü—Ä–∞–≤–∞ –∫–æ–ª–æ–Ω–∫–∞ */}
      <div className={styles.rightColumn}>
        <RightBlock
          icon={calendarBirthdayIcon}
          label="–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è"
          value={
            profile.birthDate
              ? `${formatDate(profile.birthDate)} (${calculateAge(
                  profile.birthDate
                )})`
              : "-"
          }
          editable
          onEditClick={() => onEdit(["birthDate"])}
          isOwner={isOwner}
        />
        <RightBlock
          icon={rulerIcon}
          label="–ó—Ä—ñ—Å—Ç (—Å–º)"
          value={profile.height}
          editable
          onEditClick={() => onEdit(["height"])}
          isOwner={isOwner}
        />
        <RightBlock
          icon={scaleIcon}
          label="–í–∞–≥–∞ (–∫–≥)"
          value={profile.weight}
          editable
          onEditClick={() => onEdit(["weight"])}
          isOwner={isOwner}
        />
        <RightBlock
          icon={bloodtypeIcon}
          label="–ì—Ä—É–ø–∞ –∫—Ä–æ–≤—ñ"
          value={profile.bloodType}
          editable
          onEditClick={() => onEdit(["bloodType"])}
          isOwner={isOwner}
        />
        <RightBlock
          icon={genderIcon}
          label="–°—Ç–∞—Ç—å"
          value={getGenderLabel(profile.gender)}
          editable
          onEditClick={() => onEdit(["gender"])}
          isOwner={isOwner}
        />
      </div>
    </div>
  );
}
