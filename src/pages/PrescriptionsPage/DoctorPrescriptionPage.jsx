import { useEffect, useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import { toast } from "react-toastify";
import { jwtDecode } from "jwt-decode";
import { getDoctorPrescriptions } from "../../api/prescriptionsApi";
import Loader from "../../components/Loader/Loader";
import styles from "./PrescriptionsPage.module.css";

const DoctorPrescriptionsPage = () => {
  const navigate = useNavigate();
  const [prescriptions, setPrescriptions] = useState([]);
  const [loading, setLoading] = useState(true);

  const fetchPrescriptions = async () => {
    try {
      const token = localStorage.getItem("authToken");

      if (!token) {
        toast.error("–í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ.");
        navigate("/login");
        return;
      }

      const decoded = jwtDecode(token);
      if (decoded.role !== "doctor") {
        toast.error("–î–æ—Å—Ç—É–ø –¥–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ª—ñ–∫–∞—Ä—è–º.");
        navigate("/");
        return;
      }

      const data = await getDoctorPrescriptions(decoded.id);
      setPrescriptions(data);
    } catch (err) {
      toast.error(err.message || "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è.");
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPrescriptions();
  }, [navigate]);

  if (loading) return <Loader />;

  return (
    <div className={styles.container}>
      <h2>–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫—ñ –≤–∏ –≤–∏–ø–∏—Å–∞–ª–∏</h2>

      {prescriptions.length === 0 ? (
        <p>–í–∏ —â–µ –Ω–µ –≤–∏–ø–∏—Å–∞–ª–∏ –∂–æ–¥–Ω–æ–≥–æ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è.</p>
      ) : (
        <ul className={styles.prescriptionList}>
          {prescriptions.map((prescription) => (
            <li key={prescription._id} className={styles.prescriptionItem}>
              <h3>–î—ñ–∞–≥–Ω–æ–∑: {prescription.diagnosis}</h3>
              <p>
                <strong>–õ—ñ–∫—É–≤–∞–Ω–Ω—è:</strong> {prescription.treatment}
              </p>
              <p>
                <strong>–ü–∞—Ü—ñ—î–Ω—Ç:</strong>{" "}
                <Link
                  className={styles.linkText}
                  to={`/profile/patient/${prescription.patient._id}`}
                >
                  {prescription.patient.name}
                </Link>{" "}
                ({prescription.patient.email})
              </p>
              <div className={styles.attachmentsRow}>
                {prescription.pdfUrl && (
                  <a
                    href={prescription.pdfUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    className={styles.pdfLink}
                  >
                    üìÑ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ–π–Ω–∏–π –≤–∏—Å–Ω–æ–≤–æ–∫
                  </a>
                )}
                {prescription.attachments?.map((att, index) => (
                  <a
                    key={index}
                    href={att.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className={styles.pdfLink}
                  >
                    üìé {att.title}
                  </a>
                ))}
              </div>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
};

export default DoctorPrescriptionsPage;
